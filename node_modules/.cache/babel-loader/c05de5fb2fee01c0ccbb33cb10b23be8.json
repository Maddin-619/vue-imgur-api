{"remainingRequest":"/Users/guelecb/Projects/vue/image_project/images/node_modules/babel-loader/lib/index.js!/Users/guelecb/Projects/vue/image_project/images/node_modules/eslint-loader/index.js??ref--13-0!/Users/guelecb/Projects/vue/image_project/images/src/store/modules/images.js","dependencies":[{"path":"/Users/guelecb/Projects/vue/image_project/images/src/store/modules/images.js","mtime":1570036874917},{"path":"/Users/guelecb/Projects/vue/image_project/images/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guelecb/Projects/vue/image_project/images/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/guelecb/Projects/vue/image_project/images/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/guelecb/Projects/vue/image_project/images/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport api from \"../../api/imgur\";\nimport { router } from \"../../main\";\nvar state = {\n  images: []\n};\nvar getters = {\n  allImages: function allImages(state) {\n    return state.images;\n  }\n};\nvar actions = {\n  fetchImages: function () {\n    var _fetchImages = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var rootState, commit, token, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              rootState = _ref.rootState, commit = _ref.commit;\n              token = rootState.auth.token;\n              _context.next = 4;\n              return api.fetchImages(token);\n\n            case 4:\n              response = _context.sent;\n              commit('setImages', response.data.data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchImages(_x) {\n      return _fetchImages.apply(this, arguments);\n    }\n\n    return fetchImages;\n  }(),\n  uploadImages: function () {\n    var _uploadImages = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, images) {\n      var rootState, token;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              rootState = _ref2.rootState;\n              console.log(images);\n              token = rootState.auth.token;\n              _context2.next = 5;\n              return api.uploadImages(images, token);\n\n            case 5:\n              router.push('/');\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function uploadImages(_x2, _x3) {\n      return _uploadImages.apply(this, arguments);\n    }\n\n    return uploadImages;\n  }()\n};\nvar mutations = {\n  setImages: function setImages(state, images) {\n    state.images = images;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/guelecb/Projects/vue/image_project/images/src/store/modules/images.js"],"names":["api","router","state","images","getters","allImages","actions","fetchImages","rootState","commit","token","auth","response","data","uploadImages","console","log","push","mutations","setImages"],"mappings":";;AAAA,OAAOA,GAAP;AACA,SAAQC,MAAR;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAG;AADC,CAAd;AAIA,IAAMC,OAAO,GAAG;AACZC,EAAAA,SAAS,EAAG,mBAAAH,KAAK;AAAA,WAAIA,KAAK,CAACC,MAAV;AAAA;AADL,CAAhB;AAIA,IAAMG,OAAO,GAAG;AACPC,EAAAA,WADO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,cAAAA,SADN,QACMA,SADN,EACiBC,MADjB,QACiBA,MADjB;AAEDC,cAAAA,KAFC,GAESF,SAAS,CAACG,IAFnB,CAEDD,KAFC;AAAA;AAAA,qBAGcV,GAAG,CAACO,WAAJ,CAAgBG,KAAhB,CAHd;;AAAA;AAGHE,cAAAA,QAHG;AAITH,cAAAA,MAAM,CAAC,WAAD,EAAcG,QAAQ,CAACC,IAAT,CAAcA,IAA5B,CAAN;;AAJS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAONC,EAAAA,YAPM;AAAA;AAAA;AAAA,qDAOmBX,MAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAOQK,cAAAA,SAPR,SAOQA,SAPR;AAQRO,cAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACOO,cAAAA,KATC,GASQF,SAAS,CAACG,IATlB,CASDD,KATC;AAAA;AAAA,qBAWFV,GAAG,CAACc,YAAJ,CAAiBX,MAAjB,EAAwBO,KAAxB,CAXE;;AAAA;AAaRT,cAAAA,MAAM,CAACgB,IAAP,CAAY,GAAZ;;AAbQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AAkBA,IAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAG,mBAACjB,KAAD,EAAQC,MAAR,EACZ;AACID,IAAAA,KAAK,CAACC,MAAN,GAAeA,MAAf;AACH;AAJa,CAAlB;AAUA,eAAc;AACVD,EAAAA,KAAK,EAALA,KADU;AAEVE,EAAAA,OAAO,EAAPA,OAFU;AAGVE,EAAAA,OAAO,EAAPA,OAHU;AAIVY,EAAAA,SAAS,EAATA;AAJU,CAAd","sourcesContent":["import api from '../../api/imgur'\nimport {router} from '../../main'\n\nconst state = {\n    images : []\n};\n\nconst getters = {\n    allImages : state => state.images\n};\n\nconst actions = {\n   async fetchImages({rootState, commit }){\n        const {token}  = rootState.auth;\n       const response = await api.fetchImages(token);\n       commit('setImages', response.data.data)\n\n    },\n    async uploadImages({rootState},images){\n        console.log(images);\n        const {token} = rootState.auth;\n\n        await api.uploadImages(images,token);\n\n        router.push('/')\n    }\n\n};\n\nconst mutations = {\n    setImages : (state, images) =>\n    {\n        state.images = images;\n    }\n};\n\n\n\n\nexport default{\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}